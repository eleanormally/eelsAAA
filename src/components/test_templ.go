// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

type WordPair struct {
	Word    string `json:"word"`
	NonWord string `json:"nonWord"`
	Id      int    `json:"id"`
}

func runner(pairs []WordPair) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_runner_79a0`,
		Function: `function __templ_runner_79a0(pairs){let ct = new Date()
      let index = -1
      const array = pairs
      function keyDown(event) {
        if(!(event.key == "f" || event.key == "j")) {
          return
        }
        if(index == -1) {
          $("#testerPane").html(` + "`" + `
            <div class="flex justify-center w-full">
             <span id="word1" class="bg-blue-600 rounded-lg text-white m-5 p-2 font-bold shadow-lg text-center w-40 py-5">
              
             </span>
             <span id="word2" class="bg-blue-600 rounded-lg text-white m-5 p-2 font-bold shadow-lg text-center w-40 py-5">
              
             </span>
           </div>
          ` + "`" + `)
          iterate()
          return
        }
        if(array[index].id === -1) {
          iterate()
          return
        }

        let correct = false
        if((event.key == 'f') == (array[index].word == $("#word1").text())) {
          correct = true
        }
        fetch("/post", {
          method: "POST",
          body: JSON.stringify({
            id: array[index].id,
            correct: correct,
            time: (new Date())-ct
            })
          })
        iterate()

        
      }
      function iterate() {
        index++
        if(index < array.length) {
          if(Math.random() < 0.5) {
            $("#word1").text(array[index].word)
            $("#word2").text(array[index].nonWord)
          }
          else {

            $("#word1").text(array[index].nonWord)
            $("#word2").text(array[index].word)
          }

          ct = new Date()
        } else {
          $("#testerPane").html(` + "`" + `<span class="text-center font-bold text-2xl w-full">Thank You For Completing The Test</span>` + "`" + `)
        }
      }
      window.addEventListener("keydown", keyDown)
}`,
		Call:       templ.SafeScript(`__templ_runner_79a0`, pairs),
		CallInline: templ.SafeScriptInline(`__templ_runner_79a0`, pairs),
	}
}

func Tester(givenId string, pairs []WordPair) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<html><head><title>eelsAAA</title><script src=\"https://cdn.tailwindcss.com\"></script><script src=\"https://code.jquery.com/jquery-3.7.1.slim.min.js\" integrity=\"sha256-kmHvs0B+OpCW5GVHUNjv9rOmY0IvSIRcf7zGUDTDQM8=\" crossorigin=\"anonymous\"></script></head><body><div class=\"flex justify-center items-center flex-col w-full h-full\" id=\"testerPane\"><p class=\"text-center\">You will now be shown a series of words, one on the left and one on the right.<br>Place your fingers on the f and j keys on the keyboard. One of the words will be a real word, and one will not.<br>If the correct word is on the left, press the f key. If the correct word is on the right, press the j key. <br>The first few pairs are practice, and will not be scored.<br>Press f or j to begin.</p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = runner(pairs).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
